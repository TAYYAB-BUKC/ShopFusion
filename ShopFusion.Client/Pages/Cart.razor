@page "/cart"

@inject ILocalStorageService _localStorageService
@inject IProductService _productService

@if (IsProcessing)
{
	<div class="text-center">
		<img src="/images/loading.gif" />
	</div>
}
else
{
	@if(!CartItems.Any()){
		<p>Your shopping cart is empty. Visit our home page to discover our latest products.</p>
	}

	<div class="container mt-4">
		<div class="card">
			<div class="card-header bg-dark text-light ml-0 ">
				<div class="row">
					<div class="col-6  pt-2">
						Shopping Cart
					</div>
					<div class="col-6 col-md-3 offset-md-3 text-end">
						<a href="/" class="btn btn-outline-info form-control">Continue Shopping</a>
					</div>
				</div>
			</div>
			<div class="card-body">
				@foreach (var cartItem in CartItems)
				{
					<div class="row">
						<div class="col-3 col-md-1 text-center py-2">
							<img src="@cartItem.Product.ImageURL" class="rounded" width="100%" />
					</div>
					<div class="col-9 text-sm-center text-md-start col-md-4 pt-lg-1 ">
							<h4><strong>@cartItem.Product.Name</strong></h4>

						<div class="badge bg-primary text-center" style="font-size:12px;">
							@cartItem.Product.Category.Name
						</div>
						<div class="badge bg-info text-center" style="font-size:12px;">
								@cartItem.Product.Color
						</div>
							<div><p>Size : @cartItem.ProductPrice.Size</p></div>
					</div>
					<div class="col-12 text-sm-center col-md-7 text-md-start row  pt-lg-3 mt-3">
						<div class="col-4 pt-1 ">
							<h6><strong>@cartItem.ProductPrice.Price.ToString("C") <span class="text-muted">x</span> @cartItem.Count </strong></h6>
						</div>
						<div class="col-6 col-sm-4 col-lg-6">
							<button type="submit" class="btn btn-primary">
								<i class="bi bi-plus-square"></i>
							</button>
							<button type="submit" class="btn btn-warning">
								<i class="bi bi-dash-square"></i>
							</button>
						</div>
						<div class="col-2 col-sm-4 col-lg-2 text-right">
							<button type="submit" class="btn btn-outline-danger">
								<i class="bi bi-trash-fill"></i>
							</button>
						</div>
					</div>
				</div>
				}
				<hr />

				<div class="row">
					<div class="col-12 col-md-5">
					</div>
					<div class="col-12 col-md-6 offset-md-1 col-lg-4 offset-lg-3 pr-4">
						<ul class="list-group">
							<li class="list-group-item d-flex justify-content-between bg-light">
								<span class="text-info"> Total (USD)</span>
								<strong class="text-info">@OrderTotal.ToString("C")</strong>
							</li>
						</ul>
					</div>
				</div>


			</div>
			<div class="card-footer">
				<div class="col-12  col-md-3 offset-md-9">
					<a href="/summary" class="btn btn-secondary form-control">Summary</a>
				</div>
			</div>
		</div>
	</div>	
}

@code {
	public bool IsProcessing { get; set; } = true;
	public List<CartViewModel> CartItems { get; set; }
	public IEnumerable<ProductDTO> Products { get; set; }
	public double OrderTotal { get; set; } = 0;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if(firstRender){
			CartItems = await _localStorageService.GetItemAsync<List<CartViewModel>>(CommonConfiguration.CartKey);
			Products = await _productService.GetAllProducts();
			foreach (var cartItem in CartItems)
			{
				cartItem.Product = Products.FirstOrDefault(p => p.Id == cartItem.ProductId);
				cartItem.ProductPrice = cartItem.Product.ProductPrices.FirstOrDefault(p => p.Id == cartItem.ProductPriceId);
				OrderTotal += (cartItem.ProductPrice.Price * cartItem.Count);
			}

			IsProcessing = false;
			StateHasChanged();			
		}
	}
}