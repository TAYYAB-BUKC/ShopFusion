@inject ISyncLocalStorageService _localStorageService
@inject ICartService _cartService
@implements IDisposable

<nav class="col-12 navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Shop Fusion</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item p-0">
                    <NavLink class="nav-link">
                        <a class="nav-link active" href="/"><span class="p-2">Home</span></a>
                    </NavLink>
                </li>
                <li class="nav-item p-0">
                    <NavLink class="nav-link active">
                        <a class="nav-link" href="/cart"><span class="p-2"><i class="bi bi-cart"> (@GetItemCount())</i></span></a>
                    </NavLink>
                </li>
            </ul>
            <div class="d-flex" style="float: right">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item p-0">
                        <NavLink class="nav-link">
                            <a class="nav-link" href="register"><span class="p-2">Register</span></a>
                        </NavLink>
                    </li>
                    <li class="nav-item p-0">
                        <NavLink class="nav-link">
                            <a class="nav-link" href="login"><span class="p-2">Login</span></a>
                        </NavLink>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</nav>

@code{
    protected override void OnInitialized()
    {
        _cartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _cartService.OnChange -= StateHasChanged;
    }

    private int GetItemCount(){
        var cartItems = _localStorageService.GetItem<List<CartViewModel>>(CommonConfiguration.CartKey);
        return cartItems == null ? 0 : cartItems.Count;
    }
}