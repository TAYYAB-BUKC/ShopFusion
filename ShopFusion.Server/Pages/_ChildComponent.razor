@inject IJSRuntime _JSRuntime

<div class="alert alert-info">
    @Title
</div>

@if (DangerChildContent != null)
{
    <div class="alert alert-danger">
        @DangerChildContent
    </div>
}

@if(ChildContent != null)
{
    <div class="alert alert-success">
        @ChildContent
    </div>
    <button @onclick="ShowMessage">Show Message</button> 
}

@* <_GrandChildComponent MessageForGrandChild="@MessageForGrandChild"></_GrandChildComponent> *@
<_GrandChildComponent></_GrandChildComponent>


@code {
    // [Parameter]
    // public string MessageForGrandChild { get; set; }
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public RenderFragment DangerChildContent { get; set; }
    [Parameter]
    public EventCallback ShowMessage { get; set; }

    public async void ShowSweetAlertSuccessNotification()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSweetAlertNotification", "success", "Success Notification", "Task Successful!");
    }

    public async void ShowSweetAlertFailureNotification()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSweetAlertNotification", "error", "Error Notification", "Task Failed!");
    }
}
